{"ast":null,"code":"var _jsxFileName = \"/Users/bitri/Documents/ADALAB/EVALUACIO\\u0301N 3/modulo-3-evaluacion-final-mhbeatriz/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport getDataFromAPI from \"../services/api\";\nimport ls from \"../services/localStorage\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState(ls.get(\"filterName\", \"\"));\n  const [filterSpecies, setFilterSpecies] = useState(ls.get(\"filterSpecies\", \"\"));\n  useEffect(() => {\n    if (characters.length === 0) {\n      getDataFromAPI().then(data => {\n        const orderAlpha = data.sort((a, b) => a.name > b.name ? 1 : a.name < b.name ? -1 : 0);\n        setCharacters(data);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    ls.set(\"characters\", characters);\n    ls.set(\"filterName\", filterName);\n    ls.set(\"filterSpecies\", filterSpecies);\n  }, [filterName, filterSpecies, characters]);\n\n  function handleFilter(data) {\n    if (data.key === \"name\") {\n      return setFilterName(data.value);\n    } else if (data.key === \"species\") {\n      return setFilterSpecies(data.value);\n    }\n  }\n\n  const FilterCharacters = characters.filter(character => {\n    return character.name.toLowerCase().includes(filterName.toLowerCase());\n  }).filter(character => {\n    if (filterSpecies === \"\") {\n      return true;\n    } else {\n      return character.species.toLowerCase().includes(filterSpecies.toLowerCase());\n    }\n  });\n\n  const renderCharacterDetail = props => {\n    const characterId = props.match.params.characterId;\n    const foundCharacter = characters.find(character => {\n      return character.id === parseInt(characterId);\n    });\n    console.log(foundCharacter);\n\n    if (foundCharacter !== undefined) {\n      return /*#__PURE__*/_jsxDEV(CharacterDetail, {\n        character: foundCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(Filters, {\n          handleFilter: handleFilter,\n          filterName: filterName,\n          filterSpecies: filterSpecies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CharacterList, {\n          characters: FilterCharacters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/character/:characterId\",\n        render: renderCharacterDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"H5kRXBoceywucftz7CXc+SJ6P0k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bitri/Documents/ADALAB/EVALUACIÓN 3/modulo-3-evaluacion-final-mhbeatriz/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","getDataFromAPI","ls","CharacterList","Filters","CharacterDetail","App","characters","setCharacters","filterName","setFilterName","get","filterSpecies","setFilterSpecies","length","then","data","orderAlpha","sort","a","b","name","set","handleFilter","key","value","FilterCharacters","filter","character","toLowerCase","includes","species","renderCharacterDetail","props","characterId","match","params","foundCharacter","find","id","parseInt","console","log","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport getDataFromAPI from \"../services/api\";\nimport ls from \"../services/localStorage\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState(ls.get(\"filterName\", \"\"));\n  const [filterSpecies, setFilterSpecies] = useState(\n    ls.get(\"filterSpecies\", \"\")\n  );\n\n  useEffect(() => {\n    if (characters.length === 0) {\n      getDataFromAPI().then((data) => {\n        const orderAlpha = data.sort((a, b) =>\n          a.name > b.name ? 1 : a.name < b.name ? -1 : 0\n        );\n        setCharacters(data);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    ls.set(\"characters\", characters);\n    ls.set(\"filterName\", filterName);\n    ls.set(\"filterSpecies\", filterSpecies);\n  }, [filterName, filterSpecies, characters]);\n\n  function handleFilter(data) {\n    if (data.key === \"name\") {\n      return setFilterName(data.value);\n    } else if (data.key === \"species\") {\n      return setFilterSpecies(data.value);\n    }\n  }\n\n  const FilterCharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(filterName.toLowerCase());\n    })\n    .filter((character) => {\n      if (filterSpecies === \"\") {\n        return true;\n      } else {\n        return character.species\n          .toLowerCase()\n          .includes(filterSpecies.toLowerCase());\n      }\n    });\n\n  const renderCharacterDetail = (props) => {\n    const characterId = props.match.params.characterId;\n    const foundCharacter = characters.find((character) => {\n      return character.id === parseInt(characterId);\n    });\n    console.log(foundCharacter);\n    if (foundCharacter !== undefined) {\n      return <CharacterDetail character={foundCharacter} />;\n    }\n  };\n  return (\n    <Switch>\n      <div>\n        <Route exact path=\"/\">\n          <Filters\n            handleFilter={handleFilter}\n            filterName={filterName}\n            filterSpecies={filterSpecies}\n          />\n          <CharacterList characters={FilterCharacters} />\n        </Route>\n        <Route path=\"/character/:characterId\" render={renderCharacterDetail} />\n      </div>\n    </Switch>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}